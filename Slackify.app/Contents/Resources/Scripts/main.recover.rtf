{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue255;\red64\green128\blue0;
\red108\green5\blue211;\red255\green0\blue0;\red68\green21\blue176;\red0\green22\blue176;\red76\green78\blue78;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c0\c0\c100000;\csgenericrgb\c25000\c50001\c0;
\csgenericrgb\c42337\c1841\c82833;\csgenericrgb\c100000\c0\c0;\csgenericrgb\c26552\c8264\c69162;\csgenericrgb\c0\c8656\c68986;\csgenericrgb\c29999\c30457\c30457;
}
\deftab480
\pard\pardeftab480\slleading40\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \

\b use
\b0  
\i \cf3 framework
\i0 \cf2  "Foundation"\

\b use
\b0  
\i \cf3 scripting additions
\i0 \cf2 \
\

\b property
\b0  \cf4 NSUserDefaults\cf2  : 
\b a reference
\b0  
\b to
\b0  
\i \cf5 current application's
\i0 \cf2  \cf4 NSUserDefaults\cf2 \

\b property
\b0  \cf4 NSCharacterSet\cf2  : 
\b a reference
\b0  
\b to
\b0  
\i \cf5 current application's
\i0 \cf2  \cf4 NSCharacterSet\cf2 \

\b property
\b0  \cf4 NSString\cf2  : 
\b a reference
\b0  
\b to
\b0  
\i \cf5 current application's
\i0 \cf2  \cf4 NSString\cf2 \
\

\b on
\b0  \cf6 urlencode\cf2 (\cf4 str\cf2 )\
	
\b set
\b0  \cf4 charset\cf2  
\b to
\b0  \cf4 NSCharacterSet's\cf2  \cf4 URLHostAllowedCharacterSet\cf2 \
	
\b return
\b0  \cf4 str's\cf2  \cf6 stringByAddingPercentEncodingWithAllowedCharacters\cf2 :\cf4 charset\cf2 \

\b end
\b0  \cf6 urlencode\cf2 \
\

\b on
\b0  \cf6 askForToken\cf2 ()\
	
\b set
\b0  \cf4 title\cf2  
\b to
\b0  "You can get one from https://api.slack.com/custom-integrations/legacy-tokens: "\
	
\b set
\b0  \cf4 answer\cf2  
\b to
\b0  
\b the
\b0  \cf7 text returned\cf2  
\b of
\b0  \'ac\
		(
\b \cf8 display dialog
\b0 \cf2  \cf4 title\cf2  \cf8 default answer\cf2  "" \cf8 buttons\cf2  \{"Done"\} \cf8 default button\cf2  1 \cf8 with title\cf2  "Insert your Slack legacy token")\
	\cf4 NSUserDefaults's\cf2  \cf6 standardUserDefaults\cf2 ()'s \cf6 setObject\cf2 :\cf4 answer\cf2  \cf6 forKey\cf2 :"slackify.token"\
	\cf4 NSUserDefaults's\cf2  \cf6 standardUserDefaults\cf2 ()'s \cf6 synchronize\cf2 ()\
	
\b return
\b0  \cf4 answer\cf2 \

\b end
\b0  \cf6 askForToken\cf2 \
\

\b if
\b0  
\i \cf3 application
\i0 \cf2  "Spotify" 
\b is not
\b0  \cf5 running\cf2  
\b then
\b0 \
	
\b \cf8 display dialog
\b0 \cf2  "Spotify must be running for this app to work" \cf8 with title\cf2  "Error" \cf8 with icon\cf2  
\i \cf7 stop
\i0 \cf2  \cf8 buttons\cf2  \{"Gotcha!"\}\
	
\b \cf3 quit
\b0 \cf2 \

\b end
\b0  
\b if
\b0 \
\

\b global
\b0  \cf4 token\cf2 \

\b set
\b0  \cf4 token\cf2  
\b to
\b0  \cf4 NSUserDefaults's\cf2  \cf6 standardUserDefaults\cf2 ()'s \cf6 objectForKey\cf2 :"slackify.token"\
\

\b if
\b0  \cf4 token\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
	
\b set
\b0  \cf4 token\cf2  
\b to
\b0  \cf6 askForToken\cf2 ()\

\b else
\b0 \
	
\b set
\b0  \cf4 choice\cf2  
\b to
\b0  
\b the
\b0  \cf7 button returned\cf2  
\b of
\b0  \'ac\
		(
\b \cf8 display dialog
\b0 \cf2  "Do you wish to reset your Slack token?" \cf8 buttons\cf2  \{"Yes", "No"\} \cf8 default button\cf2  2)\
	
\b if
\b0  \cf4 choice\cf2  
\b is
\b0  
\b equal to
\b0  "Yes" 
\b then
\b0 \
		
\b set
\b0  \cf4 token\cf2  
\b to
\b0  \cf6 askForToken\cf2 ()\
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  
\b if
\b0 \
\

\b on
\b0  
\b \cf3 idle
\b0 \cf2 \
	
\b if
\b0  
\i \cf3 application
\i0 \cf2  "Spotify" 
\b is not
\b0  \cf5 running\cf2  
\b then
\b0 \
		
\b \cf3 quit
\b0 \cf2  \cf9 -- Quit gracefully\cf2 \
	
\b end
\b0  
\b if
\b0 \
	
\b tell
\b0  
\i \cf3 application
\i0 \cf2  "Spotify"\
		
\b set
\b0  \cf4 currentArtist\cf2  
\b to
\b0  \cf5 artist\cf2  
\b of
\b0  \cf5 current track\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
		
\b set
\b0  \cf4 currentSong\cf2  
\b to
\b0  \cf5 name\cf2  
\b of
\b0  \cf5 current track\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
		
\b set
\b0  \cf4 json\cf2  
\b to
\b0  (\cf4 NSString's\cf2  \cf6 alloc\cf2 ()'s \cf6 initWithString\cf2 :("\{\\"status_text\\":\\"" & \cf4 currentArtist\cf2  & " - " & \cf4 currentSong\cf2  & "\\", \\"status_emoji\\":\\"headphones\\"\}"))\
		
\b set
\b0  \cf4 encodedJson\cf2  
\b to
\b0  \cf6 urlencode\cf2 (\cf4 json\cf2 )\
		
\b set
\b0  \cf4 endpoint\cf2  
\b to
\b0  (\cf4 NSString's\cf2  \cf6 alloc\cf2 ()'s \cf6 initWithFormat_\cf2 ("https://slack.com/api/users.profile.set?token=%@&profile=%@", \cf4 token\cf2 , \cf4 encodedJson\cf2 ))\
		
\b \cf8 do shell script
\b0 \cf2  "curl -s " & (\cf4 endpoint\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & " > /dev/null 2>&1"\
	
\b end
\b0  
\b tell
\b0 \
	
\b return
\b0  30\

\b end
\b0  
\b \cf3 idle
\b0 \cf2 \
\

\b on
\b0  
\b \cf3 quit
\b0 \cf2 \
	
\b continue
\b0  
\b \cf3 quit
\b0 \cf2 \

\b end
\b0  
\b \cf3 quit
\b0 \cf2 \
}